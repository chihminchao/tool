#!/bin/bash
#
# Hook used to indent *.cpp *.c *.h before commiting
#
INDENT="$(git config hooks.indent)"
if [ -e "$INDENT" ]; then
    INDENT="/usr/bin/astyle"
fi

if [ ! -x "$INDENT" ]; then
    echo "error : unable to find indent executable in the gitconfig or /usr/bin/astyle."
    echo
    echo "please configure it with :"
    echo "    git config hooks.indent /home/user/path/to/indent"
    echo "or"
    echo "    sudo apt-get install astyle"
    echo
    exit 1
fi

INDENT_VERSION=`$INDENT --version 2>&1 | cut -f 4 -d ' ' | cut -c 1`
if [ x$INDENT_VERSION = x"2" ]; then
    INDENT_ARGUMENT="--add-brackets --align-pointer=name --convert-tabs --style=otbs --indent=spaces=4 --pad-oper --pad-header --unpad-paren --lineend=linux --suffix=none --indent-col1-comments"
else
    echo "please install 'astyle' version 2.0x"
fi

# indent / format file by type
indent() {
    # getting against as the current commit
    if git rev-parse --verify HEAD >/dev/null 2>&1
    then
        local against=HEAD
    else
        # Initial commit: diff against an empty tree object
        local against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
    fi

    # loop on modified files
    git diff --cached --name-only $against |while read file;
    do
        local ext=$(expr "$file" : ".*\(\..*\)")
        case $ext in
        .h)
            __indent_C;
        ;;
        .c)
            __indent_C;
        ;;
        .hxx)
            __indent_C;
        ;;
        .cpp)
            __indent_C;
        ;;
        esac
    done
}

# Indent the file with `indent' if this is a C/CPP file
__indent_C() {

    if test ! -x "$INDENT"
    then
        return;
    fi
    if test ! -f $file
    then
        return;
    fi

    #blacklist example
    #if [[ $file == *src/disas/* ]]; then
    #    return
    #elif [[ $file ==  *src/util/lz4.* ]]; then
    #    return
    #elif [[ $file ==  *src/util/lz4hc.* ]]; then
    #    return
    #elif [[ $file ==  *src/verify/v8/csim_interface_v8.h ]]; then
    #    return
    #fi

    echo "Indenting " $file
    rmsg=`$INDENT $INDENT_ARGUMENT $file`

    if [[ $rmsg =~ ^Formatted  ]]; then
        echo "error : $file is formatted. please re-add it"
        exit 1
    fi
}

indent
